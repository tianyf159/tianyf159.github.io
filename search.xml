<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Grafana9+InfluxDB2+Jmeter5搭建可视化性能测试监控平台（Windows）</title>
    <url>/2022/06/17/Grafana9+InfluxDB2+Jmeter5%E6%90%AD%E5%BB%BA%E5%8F%AF%E8%A7%86%E5%8C%96%E6%80%A7%E8%83%BD%E6%B5%8B%E8%AF%95%E7%9B%91%E6%8E%A7%E5%B9%B3%E5%8F%B0%EF%BC%88Windows%EF%BC%89/</url>
    <content><![CDATA[<ul>
<li><h2 id="下载安装"><a href="#下载安装" class="headerlink" title="下载安装"></a>下载安装</h2></li>
</ul>
<p><strong>Grafana下载安装</strong></p>
<p><em><span id="more"></span></em></p>
<p>下载地址：<a href="https://grafana.com/grafana/download?platform=windows">https://grafana.com/grafana/download?platform=windows</a>，这里下载最新版9.0<img src="/../image/image-20220617164333555.png" alt="image-20220617164333555"></p>
<p>解压后进入bin目录，双击grafana-server.exe启动即可</p>
<p><img src="/../image/image-20220617164543153.png" alt="image-20220617164543153"></p>
<p><img src="/../image/image-20220617164615445.png" alt="image-20220617164615445"></p>
<p>启动默认端口是3000，访问<a href="http://localhost:3000/">http://localhost:3000/</a> 初始密码 admin&#x2F;admin</p>
<p><img src="/../image/image-20220617164719686.png" alt="image-20220617164719686"></p>
<p><strong>InfluxDB下载安装</strong></p>
<p>下载地址：<a href="https://docs.influxdata.com/influxdb/v2.0/install/?t=Windows">https://docs.influxdata.com/influxdb/v2.0/install/?t=Windows</a>这里下载最新版本2-2.0.9</p>
<p><img src="/../image/image-20220617165119302.png" alt="image-20220617165119302"></p>
<p>命令行进入文件目录，输入influxd回车即可</p>
<p><img src="/../image/image-20220617165545730.png" alt="image-20220617165545730"></p>
<p>默认端口为8086，浏览器输入<a href="http://localhost:8086/signin">http://localhost:8086/signin</a> 初始用户密码，admin&#x2F;admin,第一次进入需要修改密码创建数据库信息</p>
<p><img src="/../image/image-20220617170011425.png" alt="image-20220617170011425"></p>
<p><img src="/../image/image-20220617170049172.png" alt="image-20220617170049172"></p>
<p><strong>jmeter下载安装</strong></p>
<p>下载地址：<a href="https://jmeter.apache.org/download_jmeter.cgi">https://jmeter.apache.org/download_jmeter.cgi</a>这里下载最新版5.5</p>
<p><img src="/../image/image-20220617170308132.png" alt="image-20220617170308132"></p>
<p>环境变量自行查询配置。</p>
<p><strong>java11下载安装</strong></p>
<p>下载地址：<a href="https://www.oracle.com/java/technologies/downloads/#java11-windows">https://www.oracle.com/java/technologies/downloads/#java11-windows</a></p>
<p><img src="/../image/image-20220617172800577.png" alt="image-20220617172800577"></p>
<p>环境变量自行配置安装</p>
<ul>
<li><h2 id="grafana配置数据源influxdb2-0"><a href="#grafana配置数据源influxdb2-0" class="headerlink" title="grafana配置数据源influxdb2.0"></a>grafana配置数据源influxdb2.0</h2></li>
</ul>
<p>进入grafanna首页</p>
<p><img src="/../image/image-20220617171012724.png" alt="image-20220617171012724"></p>
<p>选择influxDB</p>
<p><img src="/../image/image-20220617171610418.png" alt="image-20220617171610418"></p>
<p><img src="/../image/image-20220617171708354.png" alt="image-20220617171708354"></p>
<p>下拉</p>
<p><img src="/../image/image-20220617172039423.png" alt="image-20220617172039423"></p>
<p><img src="/../image/image-20220617172208175.png" alt="image-20220617172208175"></p>
<p>token获取</p>
<p><img src="/../image/image-20220617172257391.png" alt="image-20220617172257391"></p>
<p><img src="/../image/image-20220617172328990.png" alt="image-20220617172328990"></p>
<ul>
<li><h2 id="grafana导入Jmeter保存到influxdb2-0的数据模板"><a href="#grafana导入Jmeter保存到influxdb2-0的数据模板" class="headerlink" title="grafana导入Jmeter保存到influxdb2.0的数据模板"></a>grafana导入Jmeter保存到influxdb2.0的数据模板</h2></li>
</ul>
<p>模板插件下载地址：<a href="https://grafana.com/grafana/dashboards/?search=jmeter">https://grafana.com/grafana/dashboards/?search=jmeter</a></p>
<p><img src="/../image/image-20220617173006561.png" alt="image-20220617173006561"></p>
<p><img src="/../image/image-20220617173101665.png" alt="image-20220617173101665"></p>
<p>在grafana中导入下载的json模板</p>
<p><img src="/../image/image-20220617173309351.png" alt="image-20220617173309351"></p>
<p>数据源选择<img src="/../image/image-20220617173421822.png" alt="image-20220617173421822"></p>
<ul>
<li><h2 id="在jmeter中添加后置监听器"><a href="#在jmeter中添加后置监听器" class="headerlink" title="在jmeter中添加后置监听器"></a>在jmeter中添加后置监听器</h2></li>
</ul>
<p>下载插件包下载插件jar包： <a href="https://github.com/mderevyankoaqa/jmeter-influxdb2-listener-plugin/releases">https://github.com/mderevyankoaqa/jmeter-influxdb2-listener-plugin/releases</a></p>
<p><img src="/../image/image-20220617173725870.png" alt="image-20220617173725870"></p>
<p>将jar包放到jmeter下&#x2F;lib&#x2F;ext</p>
<p>启动jmeter，导入准备好的测试脚本，配置后端监听器</p>
<p><img src="/../image/image-20220617174146159.png" alt="image-20220617174146159"></p>
<p>运行脚本</p>
<p><img src="/../image/image-20220617174357657.png" alt="image-20220617174357657"></p>
]]></content>
      <tags>
        <tag>可视化</tag>
        <tag>jmeter</tag>
      </tags>
  </entry>
  <entry>
    <title>Python日常</title>
    <url>/2018/04/09/Python%E6%97%A5%E5%B8%B8/</url>
    <content><![CDATA[<blockquote>
<p>参考文档： <a href="https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000">https://www.liaoxuefeng.com/wiki/0014316089557264a6b348958f449949df42a6d3a2e542c000</a></p>
</blockquote>
<ul>
<li><h3 id="Python-格式"><a href="#Python-格式" class="headerlink" title="Python 格式"></a>Python 格式</h3></li>
</ul>
<ol>
<li>文件结尾为 .py，如123.py</li>
<li>输出使用 print(),如下图，可输出多个字符串，用“，”隔开python试了下输出结尾不加分号也可以，我是出于习惯带上</li>
</ol>
<span id="more"></span>



<p><img src="/../image/image-20180409173759.png" alt="20180409173759"></p>
<ul>
<li><h3 id="运算符"><a href="#运算符" class="headerlink" title="运算符"></a>运算符</h3></li>
</ul>
<p><strong>1、算术运算符</strong></p>
<p> 加、减、乘、除、除取整、除取余、次方</p>
<p> +、 -、 *、 &#x2F;、 &#x2F;&#x2F;、 %、 **</p>
<p><strong>2、位运算符</strong></p>
<p>且、或、取反，异或，向左位移（二进制）、向右位移（二进制）</p>
<p>&amp;、 |、 ~、 ^、 &lt;&lt;&lt;、 &gt;&gt;&gt;</p>
]]></content>
      <tags>
        <tag>python</tag>
      </tags>
  </entry>
  <entry>
    <title>PHP使用百度OCR获取图片中文本信息</title>
    <url>/2018/04/10/PHP%20%E4%BD%BF%E7%94%A8%E7%99%BE%E5%BA%A6OCR%E8%8E%B7%E5%8F%96%E5%9B%BE%E7%89%87%E4%B8%AD%E6%96%87%E6%9C%AC%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<p>1、登录百度账号，找到百度ocr的文字识别，访问地址<a href="https://console.bce.baidu.com/ai/?_=1523326288844#/ai/ocr/overview/index">https://console.bce.baidu.com/ai/?_=1523326288844#/ai/ocr/overview/index</a></p>
<p>2、创建应用，创建之后 记住应用的API Key 和 Secret Key</p>
<p>3、获取token</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$url</span> = <span class="string">&#x27;https://aip.baidubce.com/oauth/2.0/token&#x27;</span>;</span><br><span class="line"><span class="variable">$post_data</span>[<span class="string">&#x27;grant_type&#x27;</span>]       = <span class="string">&#x27;client_credentials&#x27;</span>;</span><br><span class="line"><span class="variable">$post_data</span>[<span class="string">&#x27;client_id&#x27;</span>]      = <span class="string">&#x27;你的 Api Key&#x27;</span>;</span><br><span class="line"><span class="variable">$post_data</span>[<span class="string">&#x27;client_secret&#x27;</span>] = <span class="string">&#x27;你的 Secret Key&#x27;</span>;</span><br><span class="line"><span class="variable">$o</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">foreach</span> ( <span class="variable">$post_data</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span> ) </span><br><span class="line">&#123;</span><br><span class="line">	<span class="variable">$o</span>.= <span class="string">&quot;<span class="subst">$k</span>=&quot;</span> . <span class="title function_ invoke__">urlencode</span>( <span class="variable">$v</span> ). <span class="string">&quot;&amp;&quot;</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$post_data</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$o</span>,<span class="number">0</span>,-<span class="number">1</span>);</span><br><span class="line"><span class="variable">$res</span> = <span class="title function_ invoke__">request_post</span>(<span class="variable">$url</span>, <span class="variable">$post_data</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$resjson</span> = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$res</span>,<span class="literal">true</span>);</span><br><span class="line"><span class="variable">$token</span> = <span class="variable">$resjson</span>[<span class="string">&quot;access_token&quot;</span>];</span><br></pre></td></tr></table></figure>

<span id="more"></span>

<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">request_post</span>(<span class="params"><span class="variable">$url</span> = <span class="string">&#x27;&#x27;</span>, <span class="variable">$param</span> = <span class="string">&#x27;&#x27;</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$url</span>) || <span class="keyword">empty</span>(<span class="variable">$param</span>)) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$postUrl</span> = <span class="variable">$url</span>;</span><br><span class="line">        <span class="variable">$curlPost</span> = <span class="variable">$param</span>;</span><br><span class="line">        <span class="variable">$curl</span> = <span class="title function_ invoke__">curl_init</span>();<span class="comment">//初始化curl</span></span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_URL,<span class="variable">$postUrl</span>);<span class="comment">//抓取指定网页</span></span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_HEADER, <span class="number">0</span>);<span class="comment">//设置header</span></span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);<span class="comment">//要求结果为字符串且输出到屏幕上</span></span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_POST, <span class="number">1</span>);<span class="comment">//post提交方式</span></span><br><span class="line">        <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_POSTFIELDS, <span class="variable">$curlPost</span>);</span><br><span class="line">        <span class="variable">$data</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$curl</span>);<span class="comment">//运行curl</span></span><br><span class="line">        <span class="title function_ invoke__">curl_close</span>(<span class="variable">$curl</span>);</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>



<p>4、识别图片文本，获取信息</p>
<figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$ocrurl</span> = <span class="string">&quot;https://aip.baidubce.com/rest/2.0/ocr/v1/general_basic&quot;</span>;</span><br><span class="line"><span class="variable">$basicGeneralUrl</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">basicGeneralUrl</span>(<span class="variable">$ocrurl</span>,<span class="string">&#x27;123.jpg&#x27;</span>,<span class="variable">$token</span>);</span><br><span class="line"><span class="variable">$ocrimg_json</span>     = <span class="title function_ invoke__">json_decode</span>(<span class="variable">$basicGeneralUrl</span>,<span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">basicGeneralUrl</span>(<span class="params"><span class="variable">$ocrurl</span>,<span class="variable">$image</span>,<span class="variable">$token</span></span>) </span>&#123;</span><br><span class="line">	<span class="keyword">if</span> (<span class="keyword">empty</span>(<span class="variable">$image</span>) || <span class="keyword">empty</span>(<span class="variable">$ocrurl</span>) || <span class="keyword">empty</span>(<span class="variable">$token</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">	</span><br><span class="line">	<span class="variable">$image_data</span> = <span class="title function_ invoke__">fread</span>(<span class="title function_ invoke__">fopen</span>(<span class="variable">$image</span>, <span class="string">&#x27;r&#x27;</span>), <span class="title function_ invoke__">filesize</span>(<span class="variable">$image</span>)+<span class="number">1</span>);</span><br><span class="line">	<span class="variable">$base64_image</span> = <span class="title function_ invoke__">base64_encode</span>((<span class="variable">$image_data</span>));<span class="comment">//需要编译</span></span><br><span class="line">	<span class="variable">$date</span> = <span class="keyword">array</span>(<span class="string">&#x27;image&#x27;</span>=&gt;<span class="variable">$base64_image</span>,<span class="string">&#x27;access_token&#x27;</span>=&gt;<span class="variable">$token</span>);</span><br><span class="line">	<span class="variable">$curl</span> = <span class="title function_ invoke__">curl_init</span>();<span class="comment">//初始化curl</span></span><br><span class="line">	<span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_URL,<span class="variable">$ocrurl</span>);<span class="comment">//抓取指定网页</span></span><br><span class="line">	<span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_HEADER, <span class="number">0</span>);<span class="comment">//设置header</span></span><br><span class="line">	<span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);<span class="comment">//要求结果为字符串且输出到屏幕上</span></span><br><span class="line">	<span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_POST, <span class="number">1</span>);<span class="comment">//post提交方式</span></span><br><span class="line">	<span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$curl</span>, CURLOPT_POSTFIELDS, <span class="variable">$date</span>);</span><br><span class="line">	<span class="variable">$data</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$curl</span>);<span class="comment">//运行curl</span></span><br><span class="line">	<span class="title function_ invoke__">curl_close</span>(<span class="variable">$curl</span>);</span><br><span class="line">	<span class="keyword">return</span> <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>php</tag>
      </tags>
  </entry>
  <entry>
    <title>node_exporter+Prometheus+Grafana搭建服务器资源监控系统</title>
    <url>/2022/06/21/node_exporter+Prometheus+grafana%E6%90%AD%E5%BB%BA%E6%9C%8D%E5%8A%A1%E5%99%A8%E8%B5%84%E6%BA%90%E7%9B%91%E6%8E%A7%E7%B3%BB%E7%BB%9F/</url>
    <content><![CDATA[<blockquote>
<p>参考资料：<a href="https://blog.csdn.net/qq_36787243/article/details/119906754">https://blog.csdn.net/qq_36787243&#x2F;article&#x2F;details&#x2F;119906754</a></p>
</blockquote>
<h2 id="一、作用说明"><a href="#一、作用说明" class="headerlink" title="一、作用说明"></a><strong>一、作用说明</strong></h2><p>先来简单介绍一下：node_exporter、Prometheus 及 Grafana 的作用：</p>
<p>​                 <img src="/../image/image-kJdgdriJVgaW4EjBHGeJBQ.png" alt="img"></p>
<span id="more"></span>

<p>※ node_exporter：收集服务器资源相关数据。</p>
<p>※ Prometheus：用于储存及收集数据。</p>
<p>※ Grafana：展示数据。</p>
<h2 id="二、部署-node-exporter"><a href="#二、部署-node-exporter" class="headerlink" title="二、部署 node_exporter"></a><strong>二、部署 node_exporter</strong></h2><h3 id="下载部署命令："><a href="#下载部署命令：" class="headerlink" title="下载部署命令："></a><strong>下载部署命令：</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/src/</span><br><span class="line"></span><br><span class="line">wget https://github.com/prometheus/node_exporter/releases/download/v1.2.2/node_exporter-1.2.2.linux-amd64.tar.gz</span><br></pre></td></tr></table></figure>

<p>服务器下载太慢时，可以直接从 GitHub 网站下载，并将压缩包上传至服务器。</p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">tar -zxvf node_exporter-1.2.2.linux-amd64.tar.gz -C /usr/local/</span><br><span class="line"></span><br><span class="line">cd /usr/local/</span><br><span class="line"></span><br><span class="line">mv node_exporter-1.2.2.linux-amd64/ node_exporter/</span><br></pre></td></tr></table></figure>

<h3 id="启动-node-exporter-命令："><a href="#启动-node-exporter-命令：" class="headerlink" title="启动 node_exporter 命令："></a><strong>启动 node_exporter 命令</strong>：</h3><figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">nohup</span> /usr/local/node_exporter/node_exporter &amp;</span><br></pre></td></tr></table></figure>



<h3 id="验证访问："><a href="#验证访问：" class="headerlink" title="验证访问："></a><strong>验证访问：</strong></h3><p>访问 <a href="http://192.168.9.128:9100，这里的">http://192.168.9.128:9100，这里的</a> IP 替换为服务器 IP 。</p>
<p>出现以下页面说明启动成功：</p>
<p>​                 <img src="/../image/image-dOtiIwqLjjMLYQuI38FNYg.png" alt="img">        </p>
<h2 id="三、部署-Prometheus"><a href="#三、部署-Prometheus" class="headerlink" title="三、部署 Prometheus"></a><strong>三、部署 Prometheus</strong></h2><h3 id="下载部署命令：-1"><a href="#下载部署命令：-1" class="headerlink" title="下载部署命令："></a><strong>下载部署命令：</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/src/</span><br><span class="line"></span><br><span class="line">wget https://github.com/prometheus/prometheus/releases/download/v2.29.1/prometheus-2.29.1.linux-amd64.tar.gz</span><br><span class="line"></span><br><span class="line">cd /usr/local/src/</span><br><span class="line"></span><br><span class="line">tar -zxvf prometheus-2.29.1.linux-amd64.tar.gz -C /usr/local/</span><br><span class="line"></span><br><span class="line">cd /usr/local/</span><br><span class="line"></span><br><span class="line">mv prometheus-2.29.1.linux-amd64/ prometheus/</span><br></pre></td></tr></table></figure>



<h3 id="修改配置文件："><a href="#修改配置文件：" class="headerlink" title="修改配置文件："></a><strong>修改配置文件：</strong></h3><p>vim prometheus.yml</p>
<p>修改成当前服务器的 IP ：</p>
<p>​                 <img src="/../image/image-h-O_Px3yqerEj-SZ7e5v0A.png" alt="img">        </p>
<h3 id="启动-prometheus-命令-："><a href="#启动-prometheus-命令-：" class="headerlink" title="启动 prometheus 命令****："></a><strong>启动 prometheus 命令****：</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">nohup /usr/local/prometheus/prometheus --config.file=/usr/local/prometheus/prometheus.yml --storage.tsdb.path=/var/lib/prometheus &amp;</span><br></pre></td></tr></table></figure>



<h3 id="验证访问：-1"><a href="#验证访问：-1" class="headerlink" title="验证访问："></a><strong>验证访问：</strong></h3><p>访问 <a href="http://192.168.9.128:9090，这里的">http://192.168.9.128:9090，这里的</a> IP 替换为服务器 IP 。</p>
<p>出现以下页面说明启动成功：</p>
<p>​                        <img src="/../image/image-u2cs4ZiXNZcGBS7DOUv-4Q.png" alt="img">        </p>
<p>​                 <img src="/../image/image-g6Zvc8Cmugh56f0yz3E8WQ.png" alt="img">        </p>
<p>​                 <img src="/../image/image-jtpttWfYRMmSVbpCKFcCiw.png" alt="img">        </p>
<h3 id="修改配置文件：-1"><a href="#修改配置文件：-1" class="headerlink" title="修改配置文件："></a><strong>修改配置文件：</strong></h3><p>默认 prometheus 接收 node_exporter 采集的数据，再次修改 prometheus 配置文件，重新启动 prometheus 。</p>
<p>vim prometheus.yml</p>
<p>​                 <img src="/../image/image-ngz7dc2ogbXF7cpXrj8Elg.png" alt="img">        </p>
<figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">netstat -anput</span><br><span class="line"></span><br><span class="line">kill -9 2735</span><br><span class="line"></span><br><span class="line">nohup /usr/local/prometheus/prometheus --config.file=/usr/local/prometheus/prometheus.yml --storage.tsdb.path=/var/lib/prometheus &amp;</span><br></pre></td></tr></table></figure>



<h3 id="重启后验证访问："><a href="#重启后验证访问：" class="headerlink" title="重启后验证访问："></a><strong>重启后验证访问：</strong></h3><p>访问：<a href="http://192.168.9.128:9090/targets">http://192.168.9.128:9090/targets</a></p>
<p>​                 <img src="/../image/image-SMz0y840P5fXJ0dfW05bog.png" alt="img">        </p>
<h2 id="四、部署-Grafana"><a href="#四、部署-Grafana" class="headerlink" title="四、部署 Grafana"></a><strong>四、部署 Grafana</strong></h2><h3 id="下载部署命令：-2"><a href="#下载部署命令：-2" class="headerlink" title="下载部署命令："></a><strong>下载部署命令：</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">cd /usr/local/src/ </span><br><span class="line"></span><br><span class="line">wget https://dl.grafana.com/oss/release/grafana-8.1.2-1.x86_64.rpm</span><br><span class="line"></span><br><span class="line">yum localinstall grafana-8.1.2-1.x86_64.rpm</span><br></pre></td></tr></table></figure>



<h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a><strong>配置文件</strong></h3><p>配置文件位于 &#x2F;etc&#x2F;grafana&#x2F;grafana.ini ，这里暂时保持默认配置即可。</p>
<h3 id="开机自启动"><a href="#开机自启动" class="headerlink" title="开机自启动"></a><strong>开机自启动</strong></h3><figure class="highlight shell"><table><tr><td class="code"><pre><span class="line">systemctl enable grafana-server</span><br><span class="line"></span><br><span class="line">systemctl start grafana-server</span><br></pre></td></tr></table></figure>



<h3 id="验证访问"><a href="#验证访问" class="headerlink" title="验证访问"></a><strong>验证访问</strong></h3><p>访问 <a href="http://192.168.9.128:3000，这里的">http://192.168.9.128:3000，这里的</a> IP 替换为服务器 IP 。</p>
<p>默认账号名&#x2F;密码：admin&#x2F;admin。（首次登录会修改密码）</p>
<p>​                 <img src="/../image/image-7KR-NMwJw9yv4IPIgDrKQQ.png" alt="img">        </p>
<ol>
<li><h3 id="添加数据源"><a href="#添加数据源" class="headerlink" title="添加数据源"></a><strong>添加数据源</strong></h3></li>
</ol>
<p>​                 <img src="/../image/image-hLhKLzp4Zt-TEjItnwFpbA.png" alt="img">        </p>
<p>​                 <img src="/../image/image-lJrJH873qeKyO6X5GSFWCA.png" alt="img">        </p>
<p>​                 <img src="/../image/image-AY1UEGEHRh3WwNRYacvAhQ.png" alt="img">        </p>
<p>点击“Save&amp;test”,出现“Data source is working”,代表数据源配置成功。</p>
<p>​                 <img src="/../image/image-HZ_UxJv7_tngjr9nUE6QLg.png" alt="img">        </p>
<ol>
<li><h3 id="导入-Dashboard"><a href="#导入-Dashboard" class="headerlink" title="导入 Dashboard"></a><strong>导入 Dashboard</strong></h3></li>
</ol>
<p>​                 <img src="/../image/image-aU7WOgB0qy5AE9TTBB9_eQ.png" alt="img">        </p>
<p>输入 ID ：9276，点击 “Load”。（ 9276 是比较经典好用的一个展示服务器资源使用情况的模板，这里以导入这个模板为例）</p>
<p>​                 <img src="/../image/image-_9_5jZ3yFuaSJvvnJhv-4w.png" alt="img">        </p>
<p>选择 data source，下拉选择上一步配置的数据源，点击 “Import”：</p>
<p>​                 <img src="/../image/image-1SFoZZfqlYNJJAqWg1h1Dw.png" alt="img">        </p>
<ol>
<li><h3 id="展示效果图："><a href="#展示效果图：" class="headerlink" title="展示效果图："></a><strong>展示效果图：</strong></h3></li>
</ol>
<p>​                 <img src="/../image/image-7yPl7SerV1LHpWQ6yGvsXg.png" alt="img">        </p>
<h2 id="五、搭建总结"><a href="#五、搭建总结" class="headerlink" title="五、搭建总结"></a><strong>五、搭建总结</strong></h2><p>搭建过程中会遇到一些问题，不必惊慌。仔细查看搭建步骤，若出现不能正常访问界面的情况。可尝试进行直接启动，查看启动信息中 error 信息。配置文件对格式要求严格，请修改配置时注意，空格，标点符号采用英文形式。</p>
]]></content>
      <tags>
        <tag>可视化</tag>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>test</title>
    <url>/2018/01/01/test/</url>
    <content><![CDATA[<figure class="highlight text"><table><tr><td class="code"><pre><span class="line">安装hexo： npm install -g hexo-cli</span><br><span class="line">创建项目：hexo init &#123;name&#125;</span><br><span class="line"></span><br><span class="line">hexo clean</span><br><span class="line">hexo g</span><br><span class="line">hexo d</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>hexo</tag>
      </tags>
  </entry>
</search>
